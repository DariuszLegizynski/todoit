{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/Dashboard.js","components/projects/projectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/createProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducers.js","store/reducers/projectReducers.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLink","state","console","log","firebase","links","uid","Notifications","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","user","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducers","action","message","projectReducers","rootReducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.16a12f9d.chunk.js","sourcesContent":["import React, { Profiler } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLink = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n    <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst  mapToDispatchToProps = dispatch => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapToDispatchToProps)(SignedInLink);","export const  signIn = credentials => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type:'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = newUser => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => {\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    } \n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLink = () => {\n    \n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Sign In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLink;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLink from './SignedInLinks';\nimport SignedOutLink from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const {auth, profile} = props;\n    const links = auth.uid ? <SignedInLink profile = {profile}/> : <SignedOutLink/>\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                {links}\n            </div>\n        </nav>    \n    )\n}\n\nconst mapStateToProps  = state => {\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\n\nconst Notifications = () => {\n    return(\n        <div>\n            <p>Notifications</p>\n        </div>\n    )\n}\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    console.log(project);\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n                <div className=\"grey-text text-darken-3\">\n                    <span className=\"card-title\"><b>{project.title}</b></span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n        </div>\n    )\n}\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './projectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    \n    console.log(projects);\n    return(\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                    )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/projectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\n\nclass Dashboard extends Component{\n    render(){\n        const {projects, auth} = this.props\n        //console.log(this.props);\n        if(!auth.uid) return <Redirect to=\"/signin\"/>\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects = {projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications/>\n                    </div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth : state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps), \n    firestoreConnect([\n        {collection: 'projects'}\n    ]))(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const {project, auth} = props;\n    if(!auth.uid) return <Redirect to=\"/signin\"/>\n    if(project){\n        return(\n            <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                <div className=\"card-title\">{project.title}</div>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>{project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n        )\n    }else{\n        return(\n            <div className=\"container center\">\n                <p>Loading Project</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return{\n        project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps), \n    firestoreConnect([\n        {collection: 'projects'}\n    ]))(ProjectDetails);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\n\nclass SignIn extends Component{\n    state={\n        email: '',\n        password: ''\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n        \n        \n    }\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n        \n    }\n    render(){\n        const {authError, auth} = this.props\n        if(auth.uid) return <Redirect to=\"/\"/>\n        return(\n            <div className=\"container\">\n               <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\n                        <div className=\"red-text center\"> \n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n               </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        signIn: creds => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\nimport { signUp } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nclass SignUp extends Component{\n    state={\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        //console.log(this.state);\n        this.props.signUp(this.state)\n        \n        \n    }\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n        \n    }\n    render(){\n        const {auth, authError} = this.props;\n        if(auth.uid) return <Redirect to=\"/\" />\n        return(\n            <div className=\"container\">\n               <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n               </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signUp: newUser => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { createProject } from '../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nclass CreateProject extends Component{\n    state={\n        title: '',\n        content: ''\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        //console.log(this.state);\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n        \n    }\n    render(){\n        const {auth} = this.props\n        if(!auth.uid) return <Redirect to=\"/signin\" />\n        return(\n            <div className=\"container\">\n               <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">   \n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n               </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        //async call to database\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        const firestore = getFirestore();\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project: project})\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERR', err});\n        })\n        \n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/projectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/createProject';\n\n\n\n\nclass App extends Component{\n  render(){\n    return(\n      <Router>\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            return {\n                ...state, \n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS': \n            console.log('login success');\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS': \n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducers;","const initState = {\n    projects: [\n        {id:'1', title: 'help me find peach', content: 'blah bblahh blah'},\n        {id: '2', title: 'kill the stiga', content: 'you are Geralt of rivia'},\n        {id: '3', title: 'kill the stiga', content: 'you are Geralt of rivia'}\n    ]\n}\n\nconst projectReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state\n        case 'CREATE_PROJECT_ERR':\n            console.log('create project error', action.err);\n            return state;\n    \n        default:\n            return state;\n    }\n}\n\nexport default projectReducers;","import authReducers from './authReducers'\nimport projectReducers from './projectReducers'\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\n\nconst rootReducers = combineReducers({\n    auth: authReducers,\n    project: projectReducers,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducers;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyAGTUErvHBGFrqRox3m4N2uuUTVg69xHR8\",\n    authDomain: \"marioplan-83641.firebaseapp.com\",\n    databaseURL: \"https://marioplan-83641.firebaseio.com\",\n    projectId: \"marioplan-83641\",\n    storageBucket: \"marioplan-83641.appspot.com\",\n    messagingSenderId: \"601321041898\",\n    appId: \"1:601321041898:web:3ef16f30a214850ff84c93\",\n    measurementId: \"G-N11R0H8V87\"\n  };\n\n  firebase.initializeApp(firebaseConfig)\n  firebase.firestore().settings({timestampsInSnapshots: true})\n\n  export default firebase\n\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducers from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { getFirebase, reactReduxFirebase, ReactReduxFirebaseProvider, isLoaded } from 'react-redux-firebase';\nimport { getFirestore, reduxFirestore, createFirestoreInstance } from 'redux-firestore';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app'\n\nconst store = createStore(rootReducers, \n  compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase, fbConfig)\n  )\n)\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\nconst rrfProps = {\n  firebase,\n  config: rrfConfig, fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n}\n\nconst AuthIsLoaded = ({children}) => {\n  const auth = useSelector(state => state.firebase.auth)\n  if(!isLoaded(auth)) return <div className=\"center\">Loading...</div>\n  return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}